func main()
	var file: file@Reader :: file@makeReader("cipher.txt")
	assert(file <>& null)
	var ss: [][]char :: file.readLine().split(",")
	var n: int :: ^ss
	var nums: []int :: #[n]int
	for i(0, n - 1)
		do nums[i] :: ss[i].toInt(&)
	end for
	var keys: []bit8 :: #[3]bit8
	for i(0, 2)
		var mp: dict<int, int> :: #dict<int, int>
		for j(i, n - 1, 3)
			do mp.add(nums[j], mp.get(nums[j], &) + 1)
		end for
		var max: int :: 0
		var ks: []int :: mp.toArrayKey()
		for j(0, ^ks - 1)
			if(mp.get(ks[j], &) > max)
				do max :: mp.get(ks[j], &)
				do keys[i] :: (' ' $ bit8).xor(ks[j] $ bit8)
			end if
		end for
	end for
	var ans: int :: 0
	for i(0, n - 1)
		var c: char :: keys[i % 3].xor(nums[i] $ bit8) $ char
		;do cui@print("\{c}")
		do ans :+ c $ int
	end for
	do cui@print("\{ans}\n")
end func
