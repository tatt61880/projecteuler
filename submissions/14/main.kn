var mp: dict<int, int>
func main()
	do @mp :: #dict<int, int>
	func dfs(val: int): int
		if(val = 1)
			do @mp.add(1, 1)
			ret 1
		end if
		var v: int :: (val % 2 = 0) ?(val / 2, val * 3 + 1)
		var n: int :: @mp.get(v, &)
		if(n <> 0)
			do @mp.add(val, n + 1)
			ret n + 1
		else
			do n :: dfs(v) + 1
			do @mp.add(val, n)
			ret n
		end if
	end func
	var max: int :: 0
	var ans: int :: 0
	for i(1, 999999)
		var v: int :: dfs(i)
		if(v > max)
			do max :: v
			do ans :: i
		end if
	end for
	do cui@print("\{ans}\n")
end func
