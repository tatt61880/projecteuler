func main()
	var pNum: int :: 78498
	var primes: []int :: #[pNum]int
	do primes[0] :: 2
	var idx: int :: 1
	for n(3, 1000000, 2)
		if(math@prime(n))
			do primes[idx] :: n
			do idx :+ 1
		end if
	end for
	var num: int :: 0
	var sum: int :: 0
	while loop(true)
		do sum :+ primes[num]
		do num :+ 1
		if(sum > 999999)
			break loop
		end if
	end while
	var cum: []int :: #[pNum + 1]int
	do cum[0] :: 0
	for i(0, pNum - 1)
		do cum[i + 1] :: cum[i] + primes[i]
	end for
	while loop(true)
		for i(0, pNum - num)
			var x: int :: cum[num + i] - cum[i]
			if(x > 999999)
				break i
			end if
			if(math@prime(x))
				do cui@print("\{x} (num:\{num} from:\{primes[i]})\n")
				ret
			end if
		end for
		do num :- 1
	end while
end func
