func main()
	func mul2(a: &[]char): []char
		var res: []char :: #[^a]char
		do a.reverse()
		var remain: int :: 0
		for i(0, ^res - 1)
			var na: int :: i < ^a ?(a[i] $ int - '0' $ int, 0)
			var x: int :: (2 * na + remain) % 10
			do remain :: (2 * na + remain) / 10
			do res[i] :: (x + '0' $ int) $ char
		end for
		if(remain <> 0)
			do res :~ ['0'.offset(remain)]
		end if
		do res.reverse()
		ret res
	end func
	
	var val: []char :: "1"
	for i(1, 1000)
		do val :: mul2(&val)
	end for
	var ans: int :: 0
	for i(0, ^val - 1)
		do ans :+ val[i] $ int - '0' $ int
	end for
	do cui@print("\{ans}\n")
end func
